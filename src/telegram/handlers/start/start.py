from typing import Any

from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from db.db_config import async_session_maker
from db.models.users.repository import UsersRepository
from telegram.commands import set_main_menu
from telegram.keyboards.inline.inline import to_signup, to_car_register

from loguru import logger

from telegram.states.signup_users import SignupUserStates

router = Router(name="LETS FKING START")


@router.message(CommandStart())
async def start(message: Message, user: Any):
    try:
        await message.bot.delete_my_commands()
        await message.delete()

        if user:
            await message.answer("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
            await set_main_menu(message.bot)

        await message.answer(
            text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –∫–æ–º–∞–Ω–¥—É <b>GearMind</b> üòá\n"
                 "\n"
                 "‚ñ´Ô∏è –Ø —É–º–µ—é –∏—Å–∫–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Å–º–æ–∂–µ–º –í–∞–º –ø–æ–¥–æ–±—Ä–∞—Ç—å\n"
                 "‚ñ´Ô∏è –í—Å–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –í–∞—Å –≤–æ–ø—Ä–æ—Å—ã —Ç—ã —Å–º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!"
                 "\n"
                 "–î–∞–≤–∞–π—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –í–∞—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ üëá",
            reply_markup=to_signup
        )
    except Exception as e:
        logger.exception(f"start: {e}")
        await message.answer(
            "–ö–∞–∂–µ—Ç—Å—è, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, –∏–∑–≤–∏–Ω–∏—Ç–µ, "
            "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –º—ã —Ä–µ—à–∞–µ–º —ç—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã...."
        )


@router.callback_query(F.data == "signup")
async def signup(callback: CallbackQuery, state: FSMContext):
    try:
        await callback.message.bot.delete_message(
            chat_id=callback.from_user.id,
            message_id=callback.message.message_id
        )
        get_name_message = await callback.message.answer(
            "–ò—Ç–∞–∫, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—Å—Ç–∞—è, —Ç—Ä–µ–±—É–µ—Ç—Å—è "
            "–≤—Å–µ–≥–æ-–ª–∏—à—å <b>–í–∞—à–µ –∏–º—è</b>\n"
            "\n"
            "–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –µ–≥–æ –Ω–∏–∂–µ üëá"
        )
        await state.set_state(SignupUserStates.name)
        await state.set_data({"message_id": get_name_message.message_id})
    except Exception as e:
        logger.error(f"signup: {e}")
        await callback.answer(
            "–ö–∞–∂–µ—Ç—Å—è, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞.\n"
            "–°—Ç–∞—Ä–∞–µ–º—Å—è —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —ç—Ç–∏–º, –∏–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞..."
        )


@router.message(SignupUserStates.name)
async def get_name(message: Message, state: FSMContext):
    try:
        message_id = await state.get_value("message_id")

        await message.bot.delete_message(message.chat.id, message_id)
        await message.delete()

        async with async_session_maker() as session:
            new_user = await UsersRepository.add(
                session=session,
                tg_user_id=message.from_user.id,
                name=message.text
            )

        if not new_user:
            await message.answer(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!"
            )
            return False

        await message.answer(
            text=f"‚úÖ –û—Ç–ª–∏—á–Ω–æ, {new_user.name}! –¢–µ–ø–µ—Ä—å –º—ã –º–æ–∂–µ–º –Ω–∞—á–∏–Ω–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
                 "\n"
                 "–ò—Ç–∞–∫, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã <b>–ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à—É —Å–∏—Å—Ç–µ–º—É</b> –í–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è "
                 "–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–π –º–∞—à–∏–Ω–µ. –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ üëá",
            reply_markup=to_car_register
        )
        await set_main_menu(message.bot)
    except Exception as e:
        logger.error(f"Get User Name: {e}")
        await message.answer(
            "–ö–∞–∂–µ—Ç—Å—è, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞.\n"
            "–°—Ç–∞—Ä–∞–µ–º—Å—è —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —ç—Ç–∏–º, –∏–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞..."
        )
    finally:
        await state.clear()
