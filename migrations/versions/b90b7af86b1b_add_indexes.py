"""add indexes

Revision ID: b90b7af86b1b
Revises: 759f80f6518c
Create Date: 2025-03-07 14:37:40.277095

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b90b7af86b1b'
down_revision: Union[str, None] = '759f80f6518c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('batteries')
    op.drop_table('disks')
    op.drop_table('busbars')
    op.drop_table('oils')
    op.drop_table('products_types')

    op.drop_constraint('users_tg_user_id_key', 'users', type_='unique')
    op.drop_constraint('users_tg_username_key', 'users', type_='unique')

    op.create_index('idx_users_tg_user_id', 'users', ['tg_user_id'], unique=True)
    op.create_index('idx_users_tg_user_id_tg_user_name', 'users', ['tg_user_id', 'tg_username'], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_users_tg_user_id_tg_user_name', table_name='users')
    op.drop_index('idx_users_tg_user_id', table_name='users')

    op.create_unique_constraint('users_tg_username_key', 'users', ['tg_username'])
    op.create_unique_constraint('users_tg_user_id_key', 'users', ['tg_user_id'])

    op.create_table('products_types',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='products_types_pkey'),
    postgresql_ignore_search_path=False
    )

    op.create_table('oils',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('type_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('maker', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('liter', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('comment', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('structure', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['type_id'], ['products_types.id'], name='oils_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='oils_pkey')
    )
    op.create_table('busbars',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('type_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('maker', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('width', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('diameter', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('thorns', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['type_id'], ['products_types.id'], name='busbars_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='busbars_pkey')
    )
    op.create_table('disks',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('type_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('maker', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('diameter', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('material', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['type_id'], ['products_types.id'], name='disks_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='disks_pkey')
    )
    op.create_table('batteries',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('type_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('maker', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('voltage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('capacity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('toque', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['type_id'], ['products_types.id'], name='batteries_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='batteries_pkey')
    )
    # ### end Alembic commands ###
